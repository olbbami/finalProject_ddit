<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>kr.or</groupId>
	<artifactId>workFit</artifactId>
	<name>WorkFit</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<java-version>1.8</java-version>
		<org.springframework-version>5.2.22.RELEASE</org.springframework-version>
		<org.aspectj-version>1.5.4</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
	</properties>
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		
		<!-- Servlet -->
		<!-- Servlet 2.5 버전을 3.1 버전으로 바꾼다. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>  
				
		<!-- dependency 추가 시작 -->
		
		<!--  json 데이터 바인딩을 위한 의존 라이브러리  -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.5</version>
		</dependency>
		
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.8.5</version>
		</dependency>
		
		<!--  json 데이터 바인딩을 위한 의존 라이브러리  끝 -->
		
		<!--  파일 업로드를 처리하기 위한 라이브러리 의존 관계 정의 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.2</version>
		</dependency>
		<!--  파일 업로드를 처리하기 위한 라이브러리 의존 관계 정의 끝 -->
		
		<!--  파일을 처리하기 위한 라이브러리 의존 관계 정의 -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<!--  파일을 처리하기 위한 라이브러리 의존 관계 정의  끝 -->
		
		<!--Database 라이브러리 시작 -->
		<!-- XML로 쿼리를 작성하게 해주는 라이브러리 -->
		<dependency>
			<groupId>org.mybatis</groupId>		
			<artifactId>mybatis</artifactId>
			<version>3.5.10</version>
		</dependency>	
		
		<!--Spring과 mybatis를 연동하게 해주는 라이브러리  -->
		<dependency>
			<groupId>org.mybatis</groupId>		
			<artifactId>mybatis-spring</artifactId>
			<version>2.0.4</version>
		</dependency>	
		
		<!--Spring과 JDBC(Java Database Connectivity) -->
		<dependency>
			<groupId>org.springframework</groupId>		
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>	
		
		<!--
			dbcp : database connection pool => 커넥샨 객체를 미리 만들어 놓고 쓰고/ 반납
			최근에는 hikaricp를 사용하는 경우도 있음	
		 -->
		<dependency>
			<groupId>org.apache.commons</groupId>		
			<artifactId>commons-dbcp2</artifactId>
			<version>2.7.0</version>
		</dependency>
		
		<!-- 로깅을 위한 라이브럴, 쿼리를 console이나 파일 로그로 볼 수 있음 -->	
		<dependency>
			<groupId>org.bgee.log4jdbc-log4j2</groupId>		
			<artifactId>log4jdbc-log4j2-jdbc4</artifactId>
			<version>1.16</version>
		</dependency>	
		<!-- ojdbc6 : oracle java database connectivity 드라이버-->	
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>		
			<artifactId>ojdbc6</artifactId>
			<version>11.2.0.4</version>
		</dependency>	
		<!--Database 라이브러리 끝 -->
		
		<!-- Tiles 의존 관계 등록 시작 -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
			<version>3.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-extras</artifactId>
			<version>3.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-servlet</artifactId>
			<version>3.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>3.0.8</version>
		</dependency>
		<!-- Tiles 의존 관계 등록 끝 -->		
		
		<!-- 
			apache commons
			데이터 StringUtils lang3 를 이용할 때 사용
		 -->
		<dependency>
		 	<groupId>org.apache.commons</groupId>
		 	<artifactId>commons-lang3</artifactId>
		 	<version>3.6</version>
		</dependency>
		 
		<!-- 이미지 변환을 처리하기 위한 의존 라이브러리 -->
		<dependency>
		 	<groupId>org.imgscalr</groupId>
		 	<artifactId>imgscalr-lib</artifactId>
		 	<version>4.2</version>
		</dependency>
		 
		<!-- AOP(Aspect Oriented Programming : 관점 지향 프로그래임 ) 시작 -->
		<dependency>
			<groupId>aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>
		<!-- AOP(Aspect Oriented Programming : 관점 지향 프로그래임 ) 끝-->
		<!-- https://mvnrepository.com/artifact/net.coobird/thumbnailator -->
		<dependency>
		    <groupId>net.coobird</groupId>
		    <artifactId>thumbnailator</artifactId>
		    <version>0.4.19</version>
		</dependency>
				
		<!-- 롬복 -->		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.22</version>
			<scope>provided</scope>
		</dependency>		
		
		<!-- 스프링 시큐리티 라이브러리 의존관계 정의 -->
		<!--  스프링 시큐리티를 웹에서 동작하도록 해줌 -->
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-web -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-web</artifactId>
		    <version>5.3.13.RELEASE</version>
		</dependency>
		
		<!-- 스프링 시큐리티 설정을 도와줌 -->
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-config -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-config</artifactId>
		    <version>5.3.13.RELEASE</version>
		</dependency>
		
		<!-- 스프링 시큐리티 일반 기능 -->
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-core</artifactId>
		    <version>5.3.13.RELEASE</version>
		</dependency>
		
		<!-- 스프링 시큐리티와 태그라이브러를 연결해줌 -->				
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-taglibs -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-taglibs</artifactId>
		    <version>5.3.13.RELEASE</version>
		</dependency>
		<!-- 스프링 시큐리티 라이브러리 의존관계 정의 끝-->
				
		<!-- QR인증을 위한 라이브러리들 시작 -->
		<!-- TOTP라이브러리 -->
		<dependency>
			<groupId>dev.samstevens.totp</groupId>
			<artifactId>totp</artifactId>
			<version>1.7.1</version>
		</dependency>


		<!-- Google Zxing 바코드 생성 라이브러리 -->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>3.5.1</version>
		</dependency>

		<!-- Google Zxing 바코드 생성 라이브러리 SE Specific Extension -->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>3.5.1</version>
		</dependency>


		<!-- apache codec -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>

		<!-- QR인증을 위한 라이브러리들 끝 -->		
      
      	<!-- 크로스 오리진 해결하기 위한 라이브러리 -->
      	<dependency>
        	<groupId>org.apache.httpcomponents.client5</groupId>
         	<artifactId>httpclient5</artifactId>
         	<version>5.2.1</version>
      	</dependency>
      	<!-- httpclient5 를 훨씬 더 편하게 사용하기 위한 라이브러리, 손가락 편함 -->    
      	<dependency>
        	<groupId>org.apache.httpcomponents.client5</groupId>
        	<artifactId>httpclient5-fluent</artifactId>
        	<version>5.2.1</version>
      	</dependency>
      	
      	<!-- 자동 퇴근 처리를 위한 스케줄러 라이브러리 시작 -->
      	<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.3.2</version>
		</dependency>
      	<!-- 자동 퇴근 처리를 위한 스케줄러 라이브러리 끝 -->
      
	</dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
